{"componentChunkName":"component---src-templates-chapter-template-js","path":"/ch1","webpackCompilationHash":"e6c6a0e3769982a1e929","result":{"data":{"mdx":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar wordList = {};\nch1Defs.forEach(function (item) {\n  wordList[item.word.toLowerCase()] = item.definition;\n});\nvar _frontmatter = {\n  \"path\": \"/ch1\",\n  \"title\": \"Chapter One\",\n  \"chapter\": 1\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  wordList: wordList,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h4\", null, \"Nominal vs Ordinal vs Interval vs Ratio\"), mdx(Indent, {\n    mdxType: \"Indent\"\n  }, \"First, if the variable is \", mdx(WordSpan, {\n    word: \"qualitative\",\n    definition: wordList['qualitative'],\n    mdxType: \"WordSpan\"\n  }), '', \" (words instead of numbers) then it is either nominal or ordinal. Now ask yourself if you can put the data in a particular order. If you can it is\", '', \" \", mdx(WordSpan, {\n    word: \"ordinal\",\n    definition: wordList['ordinal'],\n    mdxType: \"WordSpan\"\n  }), \". \", '', \"Otherwise, it is \", mdx(WordSpan, {\n    word: \"nominal\",\n    definition: wordList['nominal'],\n    mdxType: \"WordSpan\"\n  }), \". If the variable is \", mdx(WordSpan, {\n    word: \"quantitative\",\n    definition: wordList['quantitative'],\n    mdxType: \"WordSpan\"\n  }), '', \" (numbers), then it is either interval or ratio. For ratio data, a value of 0 means there is no measurement. This is known as the absolute zero. If there is an absolute zero in the data, then it means it is ratio. If there is no absolute zero, then the data are interval.\"), mdx(Spacer, {\n    mdxType: \"Spacer\"\n  }), mdx(\"h4\", null, \"Example 1.1.1 - Stating Definitions for Qualitative Variable\"), mdx(Indent, {\n    mdxType: \"Indent\"\n  }, \"In 2010, the Pew Research Center questioned 1500 adults in the U.S. to estimate the proportion of the population favoring marijuana use for medical purposes. It was found that 73% are in favor of using marijuana for medical purposes. State the individual, variable, population, and sample.\", mdx(ListSpacer, {\n    mdxType: \"ListSpacer\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Individual \\u2013 a U.S. adult\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Variable \\u2013 the response to the question \\\"should marijuana be used for medical purposes?\\\" This is\\nqualitative data since you are recording a person's response \\u2013 yes or no.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Population \\u2013 set of all responses of adults in the U.S.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Sample \\u2013 set of 1500 responses of U.S. adults who are questioned.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Parameter \\u2013 proportion of those who favor marijuana for medical purposes calculated from population\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Statistic \\u2013 proportion of those who favor marijuana for medical purposes calculated from sample\")))), mdx(Spacer, {\n    mdxType: \"Spacer\"\n  }), mdx(\"h4\", null, \"Example 1.1.3 - Stating Definitions for Quantitative Variable\"), mdx(Indent, {\n    mdxType: \"Indent\"\n  }, \"A biologist wants to estimate the average height of a plant that is given a new plant food. She gives 10 plants the new plant food. State the individual, variable, population, and sample.\", mdx(ListSpacer, {\n    mdxType: \"ListSpacer\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Individual - a plant given the new plant food\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Variable - the height of the plant (Note: it is not the average height since you cannot measure an\\naverage - it is calculated from data.) This is quantitative data since you will have a number.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Population - set of all the heights of plants when the new plant food is used\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Sample - set of 10 heights of plants when the new plant food is used\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Parameter - average height of all plants\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Statistic - average height of 10 plants\")))), mdx(\"hr\", null), mdx(\"h4\", null, \"Sampling\"), mdx(ListSpacer, {\n    mdxType: \"ListSpacer\"\n  }), mdx(Indent, {\n    mdxType: \"Indent\"\n  }, mdx(\"p\", null, \"Simple random sample\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Put all names in a hat and draw a certain number of names out.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Assign each individual a number and use a random number table or\\na calculator or computer to randomly select the individuals that\\nwill be measured.\")))), mdx(Indent, {\n    mdxType: \"Indent\"\n  }, mdx(\"p\", null, \"Stratified sampling\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"If you want to look at musical preference, you could divide the\\nindividuals into age groups and then conduct simple random samples\\ninside each group.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"If you want to calculate the average price of textbooks, you could\\ndivide the individuals into groups by major and then conduct simple\\nrandom samples inside each group.\")))), mdx(Indent, {\n    mdxType: \"Indent\"\n  }, mdx(\"p\", null, \"Systematic sampling\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"You select every 5th item on an assembly line.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"You select every 10th name on the list.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"You select every 3rd customer that comes into the store.\")))), mdx(Indent, {\n    mdxType: \"Indent\"\n  }, mdx(\"p\", null, \"Cluster sampling\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"A large city wants to poll all businesses in the city. They divide\\nthe city into sections (clusters), maybe a square block for each\\nsection, and use a random number generator to pick some of the clusters.\\nThen they poll all businesses in each chosen cluster.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"You want to measure whether a tree in the forest is infected with\\nbark beetles. Instead of having to walk all over the forest, you divide\\nthe forest up into sectors, and then randomly pick the sectors that\\nyou will travel to. Then record whether a tree is infected or not\\nfor every tree in that sector.\")))), mdx(\"hr\", null), mdx(DefinitionList, {\n    json: ch1Defs,\n    mdxType: \"DefinitionList\"\n  }));\n}\nMDXContent.isMDXComponent = true;"},"frontmatter":{"title":"Chapter One","path":"/ch1","chapter":1}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}